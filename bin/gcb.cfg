# your Garena username
gcb_username = garena

# your Garena password
gcb_password = garena

# the file to log to; leave blank or comment out to disable logging
gcb_log = gcb.log

# the main host (login server) to use
gcb_mainhost = con2.garenaconnect.com

# the room ID gcb should join
#  See README for details on how to find this.
#  Default value is for the Caribbean DotA Room.
gcb_roomid = 590633

# the room host for gcb_roomid
#  See README for details on how to find this.
#  Default vaule is Server 9.
gcb_roomhost = 174.36.26.84

# the GP2PP port
# you shouldn't have to change this
gcb_peerport = 1513

# the current Garena version
gcb_version = 0x0000027C

# hostname where GHost++ is located
#  Garena clients connecting via gcb will connect to whatever game is hosted by GHost++
gcb_tcp_host = 127.0.0.1

# GHost++ host port(s)
#  To specify a list, do something like:
#  gcb_tcp_port = 6112, 6113, 6114
gcb_tcp_port = 6112

# the port to listen for Warcraft III game broadcasts
# you shouldn't have to change this
gcb_broadcastport = 6112

####################
# LAN FIX SETTINGS #
####################

# whether to enable LAN FIX or not
# LAN FIX is necessary if you wish to communicate with Garena clients on the same LAN as you
# LAN FIX is only intended for testing purposes; LAN Garena clients can connect to GHost++ over LAN instead of through gcb
#  Note that if LAN FIX is on, game names to all users will be renamed and will contain a 'w'
#  This is to differentiate for LAN users between joining the LAN game and joining through gcb
gcb_lanfix = false

# the Garena username of the LAN Garena client
gcb_lanfix_username = garena

# the internal IP address of the LAN Garena client
gcb_lanfix_ip = 192.168.1.2

# the GP2PP port of the LAN Garena client
gcb_lanfix_port = 1513

################
# BOT SETTINGS #
################

# whether to run gcb_bot
# if set to true, gcb_bot will run
gcb_bot = false

# whether to disable gcb (only if gcb_bot is enabled)
gcb_bot_disable = true

# any string representing this bot's owner; leave blank to disable !owner command
gcb_bot_owner = 

# root admin; leave blank to disable root
gcb_bot_root = 

# the bot trigger
gcb_bot_trigger = !

# time in milliseconds to wait after a chat message is sent, before sending another message
gcb_bot_delay = 2000

# time in milliseconds a public user must wait before bot will respond to another command
gcb_bot_publicdelay = 3000

# realm; only used in GHost++ and GHostOne databases
gcb_bot_realm = 

# GHost++ botid to target; only used in GHost++ extended databases
gcb_bot_id = 1

# whether to turn on auto detect of banned word/phrase
gcb_bot_detect = true

# punishment when banned word/phrase is detected (kick or ban)
gcb_bot_detect_banned_word = kick

# number of hours to be banned if banned word/phrase is detected AND ban is the punishment (in hours)
gcb_bot_detect_ban_time = 24

# announcement when banned word/phrase is detected
gcb_bot_detect_announcement = Kicked for reason: no spam bots allowed!

# whether to disable !version command; may improve security a bit
gcb_bot_noversion = false

# whether to allow public commands
gcb_bot_publiccommands = true

# gcb_bot database settings
#  login information
gcb_bot_db_username = myusername
gcb_bot_db_password = mypassword
#  JDBC hostname
#   Format should be: jdbc:mysql://hostname/databasename
gcb_bot_db_host = jdbc:mysql://localhost/gcb
# database type
#  gcb: database created by gcb install.sql script
#  ghostone: GHostOne database
#  ghost++: GHost++ database (will not support safelist)
#  ghost_extended: GHost++ database with safelist table and commands through MySQL modification
gcb_bot_db_type = gcb

# command aliases
# format:
#  gcb_bot_alias_commandname = commandname, alias1, alias2, alias3
#  commandname does not necessarily have to be included as an alias
# examples:
#  gcb_bot_alias_commands = commands, c, command, listcommand, lc, cl
#  gcb_bot_alias_announce = announce, ann
